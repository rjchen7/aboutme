{"version":3,"sources":["logo.svg","pictures/BerkeleySeal.png","pictures/Emily.png","pictures/GradPhoto.png","pictures/Jordans.png","pictures/China.jpg","pictures/PayneBen.jpg","Bullshit.js","TopBar.js","Divider.js","Greet.js","CurrentCourses.js","Slideshow.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Bullshit","props","className","word","TopBar","href","src","BerkeleySeal","alt","Divider","Greet","CurrentCourses","Slideshow","$","document","ready","hide","setInterval","fadeOut","next","fadeIn","end","appendTo","id","Jordans","Emily","GradPhoto","App","body","style","backgroundColor","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","then","registration","unregister"],"mappings":"8IAAAA,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,yFCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,wFCQ5BC,MAJf,SAAkBC,GAChB,OAAO,yBAAKC,UAAU,OAAOD,EAAME,KAA5B,gB,uBCiCMC,MAjCf,SAAgBH,GACd,OACE,oCACE,gCACE,6BACE,wBAAIC,UAAU,YACZ,4BACE,uBAAGG,KAAK,6BACN,yBAAKH,UAAU,OAAOI,IAAKC,IAAcC,IAAI,eAE/C,uBAAGH,KAAK,8BAAR,WAEF,4BACE,uBAAGA,KAAK,oDAAR,aAIF,4BACE,uBAAGA,KAAK,0HAAR,eAMN,uBAAGA,KAAK,KACN,4CAEF,yBAAKH,UAAU,QAAf,gBCnBOO,MARf,WACE,OACE,oCACE,yBAAKP,UAAU,cCWNQ,MAdf,WACE,OACE,oCACE,yBAAKR,UAAU,eAAf,UACA,uBAAGA,UAAU,YAAb,2QCQSS,MAZf,WACE,OACE,oCACE,yBAAKT,UAAU,eAAf,oBACA,yBAAKA,UAAU,YAAf,+BAC8B,6BAD9B,2DAE6B,6BAF7B,oC,qFC+BSU,MA7Bf,WAYE,OAXAC,IAAEC,UAAUC,OAAM,WAChBF,IAAE,0BAA0BG,OAC5BC,aAAY,WACVJ,IAAE,0BACCK,QAAQ,KACRC,OACAC,OAAO,KACPC,MACAC,SAAS,gBACX,QAGH,oCACE,yBAAKC,GAAG,aACN,6BACE,yBAAKjB,IAAKkB,OAEZ,6BACE,yBAAKlB,IAAKmB,OAEZ,6BACE,yBAAKnB,IAAKoB,UCYLC,MA1Bf,WAEE,OADAb,SAASc,KAAKC,MAAMC,gBAAkB,QAEpC,6BAKE,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MAZF,UAcE,kBAAC,EAAD,CAAU3B,KAAK,QAAf,KACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QC5Bc4B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASvB,SAASwB,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAczB,MAAM0B,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.9581a272.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","module.exports = __webpack_public_path__ + \"static/media/BerkeleySeal.c6cf8d3a.png\";","module.exports = __webpack_public_path__ + \"static/media/Emily.2afb91fa.png\";","module.exports = __webpack_public_path__ + \"static/media/GradPhoto.d32a9299.png\";","module.exports = __webpack_public_path__ + \"static/media/Jordans.7d779f8f.png\";","module.exports = __webpack_public_path__ + \"static/media/China.e7c29633.jpg\";","module.exports = __webpack_public_path__ + \"static/media/PayneBen.1adfcb93.jpg\";","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\n\r\nfunction Bullshit(props) {\r\n  return <div className='App'>{props.word}Hello world</div>;\r\n}\r\n\r\nexport default Bullshit;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport './styles.css';\r\nimport BerkeleySeal from './pictures/BerkeleySeal.png';\r\n\r\nfunction TopBar(props) {\r\n  return (\r\n    <>\r\n      <header>\r\n        <nav>\r\n          <ul className='navlinks'>\r\n            <li>\r\n              <a href='https://www.berkeley.edu/'>\r\n                <img className='seal' src={BerkeleySeal} alt='berk logo' />\r\n              </a>\r\n              <a href='https://github.com/rjchen7'>Github</a>\r\n            </li>\r\n            <li>\r\n              <a href='https://www.linkedin.com/in/ryan-chen-a25778189/'>\r\n                LinkedIn\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href='https://www.facebook.com/profile.php?id=100007688054575&lst=100007688054575%3A100007688054575%3A1571506422&sk=timeline'>\r\n                Facebook\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n        <a href='#'>\r\n          <button>Contact</button>\r\n        </a>\r\n        <div className='name'>Ryan Chen</div>\r\n      </header>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TopBar;\r\n","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport './styles.css';\r\n\r\nfunction Divider() {\r\n  return (\r\n    <>\r\n      <div className='divider'></div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Divider;\r\n","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport './styles.css';\r\n\r\nfunction Greet() {\r\n  return (\r\n    <>\r\n      <div className='textHeading'>Hello,</div>\r\n      <p className='textBody'>\r\n        My name is Ryan Chen. I'm from Gainesville, Florida. Currently, I am\r\n        attending the University of California, Berkeley. I plan on graduating\r\n        with a Bachelor of Arts in Computer Science. In my free time, I enjoy\r\n        going to concerts, playing tennis, and working out.\r\n      </p>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Greet;\r\n","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport './styles.css';\r\n\r\nfunction CurrentCourses() {\r\n  return (\r\n    <>\r\n      <div className='textHeading'>Current Courses:</div>\r\n      <div className='textBody'>\r\n        Foundations of Data Science <br></br>Probability and Mathematical\r\n        Statistics in Data Science <br></br>Analytic Geometry and Calculus\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CurrentCourses;\r\n","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport $ from 'jquery';\r\nimport './styles.css';\r\nimport './slideshowStyles.css';\r\nimport China from './pictures/China.jpg';\r\nimport Emily from './pictures/Emily.png';\r\nimport GradPhoto from './pictures/GradPhoto.png';\r\nimport Jordans from './pictures/Jordans.png';\r\nimport PayneBen from './pictures/PayneBen.jpg';\r\n\r\nfunction Slideshow() {\r\n  $(document).ready(function() {\r\n    $('#slideshow > div:gt(0)').hide();\r\n    setInterval(function() {\r\n      $('#slideshow > div:first')\r\n        .fadeOut(2000)\r\n        .next()\r\n        .fadeIn(2000)\r\n        .end()\r\n        .appendTo('#slideshow');\r\n    }, 5000);\r\n  });\r\n  return (\r\n    <>\r\n      <div id='slideshow'>\r\n        <div>\r\n          <img src={Jordans} />\r\n        </div>\r\n        <div>\r\n          <img src={Emily} />\r\n        </div>\r\n        <div>\r\n          <img src={GradPhoto} />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Slideshow;\r\n","import React from 'react';\nimport styled from 'styled-components';\nimport './App.css';\nimport Bullshit from './Bullshit';\nimport TopBar from './TopBar';\nimport Divider from './Divider';\nimport Greet from './Greet';\nimport CurrentCourses from './CurrentCourses';\nimport Slideshow from './Slideshow';\n\n// let x = 7;\n// const y = 'Hello World';\n// const z = <div>I'm gonna be rich as fuck</div>;\n// const Box = styled.div`\n//   height: 1000px;\n//   width: 1000px;\n//   background-color: green;\n// `;\n\nfunction App() {\n  document.body.style.backgroundColor = 'white';\n  return (\n    <div>\n      {/* <head> */}\n      {/* <link href=\"thanks_noah.css\" rel=\"stylesheet\" /> */}\n      {/* <title>ryan's first website</title> */}\n      {/* </head> */}\n      <TopBar></TopBar>\n      <Divider></Divider>\n      <Greet></Greet>\n      <Divider></Divider>\n      <Slideshow></Slideshow>\n      <Divider></Divider>\n      <CurrentCourses></CurrentCourses>\n      <Divider></Divider>\n      8------\n      <Bullshit word='Noah'>></Bullshit>\n      <Bullshit></Bullshit>\n      <Bullshit></Bullshit>\n      <Bullshit></Bullshit>\n      <Bullshit></Bullshit>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}