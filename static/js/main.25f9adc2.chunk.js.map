{"version":3,"sources":["pictures/darkblue-background.jpg","pictures/BerkeleySeal.png","pictures/self_portrait.jpg","pictures/campanile.jpg","pictures/air_drake.jpg","TopBar.js","components/CardContainerComponent.js","Divider.js","components/CardComponent.js","components/CardTextComponent.js","components/CardImageComponent.js","components/CardTitleComponent.js","AboutMeCard.js","CurrentCoursesCard.js","ContactCard.js","Information.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","TopBar","props","className","href","target","src","BerkeleySeal","alt","CardContainer","styled","div","Divider","styles","card","backgroundColor","CardComponent","Card","style","class","frontImage","cardTitle","marginBottom","cardText","CardText","CardImage","img","CardTitle","h1","AboutMeCard","aboutMeImage","variant","selfPortrait","aboutMeTitle","aboutMeText","courses","paddingLeft","paddingRight","paddingBottom","CurrentCoursesCard","campanile","hyperlink","fontSize","fontFamily","fontWeight","ContactCard","airDrake","wrapper","height","content","zIndex","background","Information","App","document","body","window","onbeforeunload","scrollTo","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.25f9adc2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/darkblue-background.10fe428c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/BerkeleySeal.c6cf8d3a.png\";","module.exports = __webpack_public_path__ + \"static/media/self_portrait.3b951bfb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/campanile.0b6c1456.jpg\";","module.exports = __webpack_public_path__ + \"static/media/air_drake.241ed0a0.jpg\";","import React from 'react';\r\nimport './App.css';\r\nimport './styles.css';\r\nimport BerkeleySeal from './pictures/BerkeleySeal.png';\r\n\r\nfunction TopBar(props) {\r\n  return (\r\n    <>\r\n      <header>\r\n        <nav>\r\n          <ul className='navlinks'>\r\n            <li>\r\n              <a href='https://www.berkeley.edu/' target='_blank'>\r\n                <img className='seal' src={BerkeleySeal} alt='berk logo' />\r\n              </a>\r\n              <a href='https://github.com/rjchen7' target='_blank'>\r\n                Github\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a\r\n                href='https://www.linkedin.com/in/ryan-chen-a25778189/'\r\n                target='_blank'>\r\n                LinkedIn\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a\r\n                href='https://www.facebook.com/profile.php?id=100007688054575&lst=100007688054575%3A100007688054575%3A1571506422&sk=timeline'\r\n                target='_blank'>\r\n                Facebook\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n        <div className='name'>Ryan Chen</div>\r\n      </header>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TopBar;\r\n","import styled from 'styled-components';\r\nimport backgroundImage from '../pictures/darkblue-background.jpg';\r\n\r\nconst CardContainer = styled.div`\r\n  vertical-align: middle;\r\n  display: flex;\r\n  height: 100vh;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  padding-bottom: 10px;\r\n  color: black;\r\n  background-position: center;\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n`;\r\n\r\nexport default CardContainer;\r\n\r\n// top: '50%',\r\n//     bottom: '50%',\r\n//     height: '100vh',\r\n//     alignItems: 'center',\r\n","import React from 'react';\r\nimport './App.css';\r\nimport './styles.css';\r\n\r\nfunction Divider() {\r\n  return (\r\n    <>\r\n      <div className='divider'></div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Divider;\r\n","import React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport './CardFlip.css';\r\nimport Divider from '../Divider'\r\n\r\n// props has cardTitle, cardText, and frontImage\r\nconst CardComponent = (props) => {\r\n  return (\r\n    <Card style={styles.card}>\r\n      <div class='flip-card'>\r\n        <div class='flip-card-inner'>\r\n          <div class='flip-card-front'>{props.frontImage}</div>\r\n          <div class='flip-card-back'>\r\n            {props.cardTitle}\r\n            <Divider style={{marginBottom: '10'}} />\r\n            {props.cardText}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  card: {\r\n    backgroundColor: 'transparent',\r\n  },\r\n};\r\n\r\nexport default CardComponent;\r\n","import styled from 'styled-components';\r\n\r\nconst CardText = styled.div`\r\n  color: white;\r\n  font-size: 20px;\r\n  padding-left: 15px;\r\n  padding-right: 15px;\r\n  font-family: Ubuntu, monospace;\r\n  font-weight: 50;\r\n  line-height: 30px;\r\n  text-align: justify;\r\n  font-weight: 400;\r\n`;\r\n\r\nexport default CardText;\r\n","import styled from 'styled-components';\r\n\r\nconst CardImage = styled.img`\r\n  width: 370px;\r\n  height: 500px;\r\n  object-fit: cover;\r\n`;\r\n\r\nexport default CardImage;\r\n","import styled from 'styled-components';\r\n\r\nconst CardTitle = styled.h1`\r\n  padding-top: 25px;\r\n  padding-bottom: 10px;\r\n  color: white;\r\n`;\r\n\r\nexport default CardTitle;\r\n","import React from 'react';\r\nimport Card from './components/CardComponent.js';\r\nimport selfPortrait from './pictures/self_portrait.jpg';\r\nimport CardText from './components/CardTextComponent.js';\r\nimport CardImage from './components/CardImageComponent.js';\r\nimport CardTitle from './components/CardTitleComponent.js';\r\nimport Divider from './Divider'\r\n\r\nconst AboutMeCard = () => {\r\n  const aboutMeImage = <CardImage variant='top' src={selfPortrait} />;\r\n  const aboutMeTitle = <CardTitle>About Me</CardTitle>;\r\n  const aboutMeText = (\r\n    <CardText>\r\n      My name is Ryan Chen. I'm from Gainesville, Florida. Currently, I am\r\n      attending the University of California, Berkeley, and I am majoring in\r\n      Computer Science. In my free time, I enjoy going to concerts, developing apps, and working out.\r\n      I hope to have a tech startup some day in the near future. If that is successful, I want to use the money I earned to go\r\n      to a good film school and make it big in the hollywood industry as a movie\r\n      director.\r\n    </CardText>\r\n  );\r\n\r\n  return (\r\n    <Card\r\n      frontImage={aboutMeImage}\r\n      cardTitle={aboutMeTitle}\r\n      cardText={aboutMeText}\r\n    />\r\n  );\r\n};\r\n\r\nexport default AboutMeCard;\r\n","import React from 'react';\r\nimport Card from './components/CardComponent.js';\r\nimport campanile from './pictures/campanile.jpg';\r\nimport CardText from './components/CardTextComponent.js';\r\nimport CardImage from './components/CardImageComponent.js';\r\nimport CardTitle from './components/CardTitleComponent.js';\r\nimport Divider from './Divider'\r\n\r\nconst CurrentCoursesCard = () => {\r\n  const aboutMeImage = <CardImage variant='top' src={campanile} />;\r\n  const aboutMeTitle = <CardTitle>Current Courses</CardTitle>;\r\n  const aboutMeText = (\r\n    <CardText>\r\n      <ul style={styles.courses}>\r\n        <li>Data Structures</li>\r\n        <li>Principles and Techniques of Data Science</li>\r\n        <li>Principle of Business</li>\r\n        <li>Introduction to Culture and Natural Resource Management</li>\r\n      </ul>\r\n    </CardText>\r\n  );\r\n\r\n  return (\r\n    <Card\r\n      frontImage={aboutMeImage}\r\n      cardTitle={aboutMeTitle}\r\n      cardText={aboutMeText}\r\n    />\r\n  );\r\n};\r\n\r\nlet styles = {\r\n  courses: {\r\n    paddingLeft: 15,\r\n    paddingRight: 15,\r\n    paddingBottom: 15\r\n  }\r\n}\r\n\r\nexport default CurrentCoursesCard;\r\n","import React from 'react';\r\nimport Card from './components/CardComponent.js';\r\nimport airDrake from './pictures/air_drake.jpg';\r\nimport CardText from './components/CardTextComponent.js';\r\nimport CardImage from './components/CardImageComponent.js';\r\nimport CardTitle from './components/CardTitleComponent.js';\r\nimport './styles.css'\r\nimport Divider from './Divider'\r\n\r\nconst ContactCard = () => {\r\n  const aboutMeImage = <CardImage variant='top' src={airDrake} />;\r\n  const aboutMeTitle = <CardTitle>Contact Me</CardTitle>;\r\n  const aboutMeText = (\r\n    <CardText>\r\n      <ul className='contact'>\r\n        Email:{' '}\r\n        <a style={styles.hyperlink} href='mailto:ryanjchen@berkeley.edu'>\r\n         ryanjchen@berkeley.edu\r\n        </a> {' '}\r\n        <br></br> Phone Number:{' '}\r\n        <a style={styles.hyperlink} href='tel:+13523270275'>\r\n          352-327-0275\r\n        </a>{' '}\r\n        <br></br>\r\n        Address: 2717 Channing Way, Apt 3, {'      '} Berkeley, California\r\n      </ul>\r\n    </CardText>\r\n  );\r\n\r\n  return (\r\n    <Card\r\n      frontImage={aboutMeImage}\r\n      cardTitle={aboutMeTitle}\r\n      cardText={aboutMeText}\r\n    />\r\n  );\r\n};\r\n\r\nlet styles = {\r\n  hyperlink: {\r\n    fontSize: 20,\r\n    paddingRight: 15,\r\n    fontFamily: 'Ubuntu',\r\n    fontWeight: 50,\r\n    fontWeight: 400,\r\n  },\r\n}\r\n\r\nexport default ContactCard;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport './styles.css';\r\nimport CardContainer from './components/CardContainerComponent.js';\r\nimport backgroundImage from './pictures/darkblue-background.jpg';\r\nimport AboutMeCard from './AboutMeCard.js';\r\nimport CurrentCoursesCard from './CurrentCoursesCard.js';\r\nimport ContactCard from './ContactCard.js';\r\nimport './Wave.css'\r\n\r\nconst Information = () => {\r\n  return (\r\n    <div style={styles.wrapper}>\r\n      <div style={styles.content}>\r\n        <CardContainer>\r\n          <CurrentCoursesCard />\r\n          <AboutMeCard />\r\n          <ContactCard />\r\n        </CardContainer>\r\n      </div>\r\n      <div style={styles.background} className='ocean'>\r\n        <div className='wave'></div>\r\n        <div className='wave'></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  wrapper: {\r\n    // position: 'relative',\r\n    height: '100vh',\r\n  },\r\n  content: {\r\n    // position: 'relative',\r\n    zIndex: 100,\r\n  },\r\n  background: {\r\n    zIndex: -100,\r\n  }\r\n};\r\n\r\nexport default Information;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport TopBar from './TopBar';\r\nimport Information from './Information';\r\n\r\nfunction App() {\r\n  document.body.style.backgroundColor = 'white';\r\n  window.onbeforeunload = () => {\r\n    window.scrollTo(0, 0);\r\n  };\r\n  return (\r\n    <div>\r\n      <TopBar />\r\n      <Information />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}